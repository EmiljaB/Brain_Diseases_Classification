C:\Users\user\PycharmProjects\EmiProject\.venv\Scripts\python.exe C:\Users\user\PycharmProjects\EmiProject\UNETmodel.py
2024-05-27 19:51:04.221248: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-05-27 19:51:05.092128: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
100%|██████████| 30/30 [00:00<00:00, 1074.30it/s]
100%|██████████| 35/35 [00:00<00:00, 1002.67it/s]
100%|██████████| 29/29 [00:00<00:00, 691.92it/s]
100%|██████████| 37/37 [00:00<00:00, 903.77it/s]
100%|██████████| 29/29 [00:00<00:00, 937.35it/s]
2024-05-27 19:51:07.954528: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Epoch 1/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 36s 8s/step - accuracy: 0.8447 - loss: 0.5869 - val_accuracy: 0.8336 - val_loss: 0.2597
Epoch 2/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.8387 - loss: 0.2345 - val_accuracy: 0.8336 - val_loss: 0.1996
Epoch 3/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.8440 - loss: 0.1775 - val_accuracy: 0.9461 - val_loss: 0.1647
Epoch 4/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9614 - loss: 0.1512 - val_accuracy: 0.9549 - val_loss: 0.1429
Epoch 5/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9673 - loss: 0.1229 - val_accuracy: 0.9684 - val_loss: 0.1062
Epoch 6/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9729 - loss: 0.0867 - val_accuracy: 0.9731 - val_loss: 0.0787
Epoch 7/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9742 - loss: 0.0705 - val_accuracy: 0.9741 - val_loss: 0.0698
Epoch 8/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9753 - loss: 0.0638 - val_accuracy: 0.9749 - val_loss: 0.0642
Epoch 9/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9761 - loss: 0.0595 - val_accuracy: 0.9751 - val_loss: 0.0611
Epoch 10/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9765 - loss: 0.0572 - val_accuracy: 0.9752 - val_loss: 0.0598
Epoch 11/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9762 - loss: 0.0558 - val_accuracy: 0.9755 - val_loss: 0.0588
Epoch 12/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9776 - loss: 0.0531 - val_accuracy: 0.9756 - val_loss: 0.0560
Epoch 13/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9776 - loss: 0.0518 - val_accuracy: 0.9745 - val_loss: 0.0552
Epoch 14/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9767 - loss: 0.0516 - val_accuracy: 0.9759 - val_loss: 0.0537
Epoch 15/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9783 - loss: 0.0487 - val_accuracy: 0.9754 - val_loss: 0.0524
Epoch 16/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9778 - loss: 0.0483 - val_accuracy: 0.9766 - val_loss: 0.0517
Epoch 17/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9786 - loss: 0.0473 - val_accuracy: 0.9770 - val_loss: 0.0510
Epoch 18/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9784 - loss: 0.0473 - val_accuracy: 0.9765 - val_loss: 0.0513
Epoch 19/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9781 - loss: 0.0478 - val_accuracy: 0.9769 - val_loss: 0.0491
Epoch 20/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9787 - loss: 0.0461 - val_accuracy: 0.9778 - val_loss: 0.0491
Epoch 21/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9782 - loss: 0.0474 - val_accuracy: 0.9781 - val_loss: 0.0484
Epoch 22/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9799 - loss: 0.0440 - val_accuracy: 0.9777 - val_loss: 0.0476
Epoch 23/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9796 - loss: 0.0440 - val_accuracy: 0.9769 - val_loss: 0.0477
Epoch 24/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 35s 9s/step - accuracy: 0.9790 - loss: 0.0451 - val_accuracy: 0.9792 - val_loss: 0.0462
Epoch 25/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 34s 8s/step - accuracy: 0.9798 - loss: 0.0440 - val_accuracy: 0.9794 - val_loss: 0.0458
Epoch 26/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9805 - loss: 0.0427 - val_accuracy: 0.9791 - val_loss: 0.0451
Epoch 27/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9809 - loss: 0.0412 - val_accuracy: 0.9797 - val_loss: 0.0440
Epoch 28/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9814 - loss: 0.0407 - val_accuracy: 0.9802 - val_loss: 0.0433
Epoch 29/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9813 - loss: 0.0409 - val_accuracy: 0.9805 - val_loss: 0.0425
Epoch 30/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9818 - loss: 0.0403 - val_accuracy: 0.9810 - val_loss: 0.0420
Epoch 31/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9816 - loss: 0.0406 - val_accuracy: 0.9794 - val_loss: 0.0437
Epoch 32/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9816 - loss: 0.0400 - val_accuracy: 0.9815 - val_loss: 0.0405
Epoch 33/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9831 - loss: 0.0374 - val_accuracy: 0.9819 - val_loss: 0.0408
Epoch 34/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9830 - loss: 0.0378 - val_accuracy: 0.9822 - val_loss: 0.0394
Epoch 35/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9832 - loss: 0.0371 - val_accuracy: 0.9822 - val_loss: 0.0390
Epoch 36/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9831 - loss: 0.0371 - val_accuracy: 0.9823 - val_loss: 0.0386
Epoch 37/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9836 - loss: 0.0362 - val_accuracy: 0.9829 - val_loss: 0.0383
Epoch 38/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9841 - loss: 0.0352 - val_accuracy: 0.9831 - val_loss: 0.0373
Epoch 39/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9846 - loss: 0.0340 - val_accuracy: 0.9832 - val_loss: 0.0376
Epoch 40/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9846 - loss: 0.0342 - val_accuracy: 0.9835 - val_loss: 0.0366
Epoch 41/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9844 - loss: 0.0346 - val_accuracy: 0.9829 - val_loss: 0.0375
Epoch 42/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9844 - loss: 0.0342 - val_accuracy: 0.9836 - val_loss: 0.0366
Epoch 43/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9845 - loss: 0.0342 - val_accuracy: 0.9838 - val_loss: 0.0360
Epoch 44/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9846 - loss: 0.0338 - val_accuracy: 0.9839 - val_loss: 0.0354
Epoch 45/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9848 - loss: 0.0336 - val_accuracy: 0.9841 - val_loss: 0.0349
Epoch 46/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9846 - loss: 0.0337 - val_accuracy: 0.9842 - val_loss: 0.0346
Epoch 47/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9854 - loss: 0.0319 - val_accuracy: 0.9843 - val_loss: 0.0344
Epoch 48/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9858 - loss: 0.0310 - val_accuracy: 0.9843 - val_loss: 0.0342
Epoch 49/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9855 - loss: 0.0318 - val_accuracy: 0.9845 - val_loss: 0.0340
Epoch 50/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9856 - loss: 0.0314 - val_accuracy: 0.9844 - val_loss: 0.0341
Epoch 51/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9864 - loss: 0.0299 - val_accuracy: 0.9845 - val_loss: 0.0337
Epoch 52/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9860 - loss: 0.0307 - val_accuracy: 0.9845 - val_loss: 0.0336
Epoch 53/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9854 - loss: 0.0318 - val_accuracy: 0.9846 - val_loss: 0.0337
Epoch 54/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9854 - loss: 0.0318 - val_accuracy: 0.9846 - val_loss: 0.0340
Epoch 55/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9855 - loss: 0.0318 - val_accuracy: 0.9846 - val_loss: 0.0335
Epoch 56/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9860 - loss: 0.0308 - val_accuracy: 0.9837 - val_loss: 0.0354
Epoch 57/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9848 - loss: 0.0335 - val_accuracy: 0.9839 - val_loss: 0.0367
Epoch 58/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9846 - loss: 0.0345 - val_accuracy: 0.9840 - val_loss: 0.0372
Epoch 59/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9849 - loss: 0.0336 - val_accuracy: 0.9845 - val_loss: 0.0347
Epoch 60/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9856 - loss: 0.0319 - val_accuracy: 0.9849 - val_loss: 0.0336
Epoch 61/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9858 - loss: 0.0317 - val_accuracy: 0.9846 - val_loss: 0.0340
Epoch 62/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9866 - loss: 0.0294 - val_accuracy: 0.9848 - val_loss: 0.0335
Epoch 63/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9869 - loss: 0.0290 - val_accuracy: 0.9848 - val_loss: 0.0332
Epoch 64/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9863 - loss: 0.0297 - val_accuracy: 0.9850 - val_loss: 0.0327
Epoch 65/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9864 - loss: 0.0299 - val_accuracy: 0.9849 - val_loss: 0.0327
Epoch 66/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9864 - loss: 0.0294 - val_accuracy: 0.9851 - val_loss: 0.0324
Epoch 67/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9864 - loss: 0.0296 - val_accuracy: 0.9851 - val_loss: 0.0324
Epoch 68/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9875 - loss: 0.0272 - val_accuracy: 0.9851 - val_loss: 0.0323
Epoch 69/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9867 - loss: 0.0289 - val_accuracy: 0.9852 - val_loss: 0.0321
Epoch 70/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9869 - loss: 0.0286 - val_accuracy: 0.9852 - val_loss: 0.0323
Epoch 71/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9870 - loss: 0.0281 - val_accuracy: 0.9852 - val_loss: 0.0320
Epoch 72/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9871 - loss: 0.0280 - val_accuracy: 0.9851 - val_loss: 0.0321
Epoch 73/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9870 - loss: 0.0285 - val_accuracy: 0.9852 - val_loss: 0.0324
Epoch 74/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9875 - loss: 0.0271 - val_accuracy: 0.9853 - val_loss: 0.0320
Epoch 75/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9876 - loss: 0.0269 - val_accuracy: 0.9853 - val_loss: 0.0318
Epoch 76/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9879 - loss: 0.0264 - val_accuracy: 0.9849 - val_loss: 0.0323
Epoch 77/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9873 - loss: 0.0275 - val_accuracy: 0.9850 - val_loss: 0.0325
Epoch 78/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9877 - loss: 0.0266 - val_accuracy: 0.9852 - val_loss: 0.0323
Epoch 79/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9872 - loss: 0.0276 - val_accuracy: 0.9853 - val_loss: 0.0322
Epoch 80/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9876 - loss: 0.0265 - val_accuracy: 0.9854 - val_loss: 0.0317
Epoch 81/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9874 - loss: 0.0272 - val_accuracy: 0.9853 - val_loss: 0.0320
Epoch 82/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9872 - loss: 0.0276 - val_accuracy: 0.9854 - val_loss: 0.0322
Epoch 83/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9880 - loss: 0.0261 - val_accuracy: 0.9851 - val_loss: 0.0327
Epoch 84/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9877 - loss: 0.0265 - val_accuracy: 0.9853 - val_loss: 0.0324
Epoch 85/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9881 - loss: 0.0257 - val_accuracy: 0.9854 - val_loss: 0.0318
Epoch 86/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9879 - loss: 0.0263 - val_accuracy: 0.9851 - val_loss: 0.0324
Epoch 87/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9880 - loss: 0.0257 - val_accuracy: 0.9852 - val_loss: 0.0326
Epoch 88/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9883 - loss: 0.0253 - val_accuracy: 0.9854 - val_loss: 0.0322
Epoch 89/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9887 - loss: 0.0243 - val_accuracy: 0.9852 - val_loss: 0.0320
Epoch 90/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9883 - loss: 0.0253 - val_accuracy: 0.9850 - val_loss: 0.0327
Epoch 91/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9878 - loss: 0.0261 - val_accuracy: 0.9853 - val_loss: 0.0322
Epoch 92/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9885 - loss: 0.0248 - val_accuracy: 0.9846 - val_loss: 0.0333
Epoch 93/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9875 - loss: 0.0269 - val_accuracy: 0.9854 - val_loss: 0.0325
Epoch 94/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9885 - loss: 0.0249 - val_accuracy: 0.9855 - val_loss: 0.0325
Epoch 95/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9886 - loss: 0.0248 - val_accuracy: 0.9850 - val_loss: 0.0332
Epoch 96/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9882 - loss: 0.0254 - val_accuracy: 0.9852 - val_loss: 0.0329
Epoch 97/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9887 - loss: 0.0246 - val_accuracy: 0.9853 - val_loss: 0.0327
Epoch 98/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 32s 8s/step - accuracy: 0.9889 - loss: 0.0239 - val_accuracy: 0.9853 - val_loss: 0.0327
Epoch 99/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9887 - loss: 0.0244 - val_accuracy: 0.9852 - val_loss: 0.0334
Epoch 100/100
4/4 ━━━━━━━━━━━━━━━━━━━━ 33s 8s/step - accuracy: 0.9890 - loss: 0.0238 - val_accuracy: 0.9852 - val_loss: 0.0352
1/1 ━━━━━━━━━━━━━━━━━━━━ 2s 2s/step
Accuracy: 0.9852
Precision: 0.9855
Recall: 0.9969
F1 Score: 0.9911
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.

Process finished with exit code 0
